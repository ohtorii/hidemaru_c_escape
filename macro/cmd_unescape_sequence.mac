/*C言語のエスケープシーケンスを可能な範囲で元に戻す

【処理内容】
    \\  -> \
    \"  -> "
    \'  -> '
    \t  -> タブ
    \n  -> 改行


【動作】
    ・選択範囲無し
        一行を処理します。

    ・選択範囲あり
        選択された範囲を処理します。

    ・矩形選択
        選択された範囲を処理します。


【動作環境】
    秀丸エディタ ver8移行


【インストール】
    ショートカットキーに割り当ててお使い下さい。


【連絡先】
    https://github.com/ohtorii/hidemaru_c_escape
    http://d.hatena.ne.jp/ohtorii/
*/



//////////////////////////////////////////////////////////////////////////////
//	内部処理
//////////////////////////////////////////////////////////////////////////////
$g_find			= "";
$g_rep			= "";
#g_num			= 0;

$g_find[#g_num]	= "(?<!\\\\)\\\\t";	//このような場合をうまく処理する。 c:\\tmp\\test.ext
$g_rep[#g_num]	= "\t";
#g_num			= #g_num+1;

$g_find[#g_num]	= "\\\\\\\\";
$g_rep[#g_num]	= "\\\\";
#g_num			= #g_num+1;

$g_find[#g_num]	= "\\\\\"";
$g_rep[#g_num]	= "\"";
#g_num			= #g_num+1;

$g_find[#g_num]	= "\\\\'";
$g_rep[#g_num]	= "\'";
#g_num			= #g_num+1;

$g_find[#g_num]	= "(\\\\n)(\\x0d\\x0a|\\x0d|\\x0a)";	//行末の\nを削除する
$g_rep[#g_num]	= "\\n";
#g_num			= #g_num+1;

$g_find[#g_num]	= "\\\\n";	//通常の改行(\n)
$g_rep[#g_num]	= "\n";
#g_num			= #g_num+1;



#g_load_dll=false;
call Main;
endmacro;


Main:
	call LoadDll;
	if(#return){
		return false;
	}

	begingroupundo;
	disabledraw;
	$$old_searchbuffer = searchbuffer;
	##old_searchoption = searchoption;
	##old_x=x;
	##old_y=y;
	call Proc;
	moveto ##old_x,##old_y;
	setsearch $$old_searchbuffer, ##old_searchoption;
	//enabledraw;
	endgroupundo;
	call FreeDll;
	return;


Proc:
	if(rectselecting){
		//矩形選択
		call DoRecSelecting;
	}else{
		if(selecting) {
			//選択あり
			call DoSingleSelect;
		}else{
			//選択無し
			call SelectLine;
			call DoSingleSelect;
		}
	}
	return ;


DoRecSelecting:
	##old_seltopcolumn=seltopcolumn;
	##old_seltoplineno=seltoplineno;
	##old_selendcolumn=selendcolumn;
	##old_selendlineno=selendlineno;
	##y=##old_seltoplineno;
	while(##y <= ##old_selendlineno){
		call SelectRange ##old_seltopcolumn, ##y, ##old_selendcolumn, ##y;
		call DoSingleSelect;
		##y = ##y + 1;
	}
	return ;


DoSingleSelect:
	$$text = gettext2(seltopcolumn,seltoplineno,selendcolumn,selendlineno,1);
	##i=0;
	while(##i < #g_num){
		$$text=dllfuncstr( "ReplaceRegular", $g_find[##i], $$text, 0, $g_rep[##i], 2);
		##i = ##i + 1;
	}
	delete;
	insert  $$text;
	return ;


SelectRange:
	escape;
	movetolineno 1+##1, ##2;
	beginsel;
	movetolineno 1+##3, ##4;
	endsel;
	return ;


SelectLine:
	escape;
	golinetop2;
	beginsel;
	golineend2;
	endsel;
	return ;


LoadDll:
	$$dll_name = "hmjre.dll";
	loaddll $$dll_name;
	#g_load_dll=result;
	if(! #g_load_dll){
		message("DLLのロードに失敗しました。\n" + $$dll_name);
		return false;
	}
	##major=(dllfunc("JreGetVersion") & 0xFF00) / 256;
	##minor=(dllfunc("JreGetVersion") & 0xF0) / 16 * 10 + (dllfunc("JreGetVersion") & 0xF);
	##version = ##major*100+##minor;
	if(##version < 339){
		message("hmjre.dll のバージョンが古いです。");
		freedll;
		return false;
	}
	return true;


FreeDll:
	if(#g_load_dll){
		freedll;
		#g_load_dll=true;
	}
	return ;
